package App::KSP_CKAN::WebHooks::InflateNetKAN;

use v5.010;
use strict;
use warnings;
use autodie;
use Method::Signatures 20140224;
use File::chdir;
use Moo;
use namespace::clean;

extends 'App::KSP_CKAN::NetKAN';

# ABSTRACT: NetKAN Index on demand

# VERSION: Generated by DZP::OurPkg:Version

=head1 SYNOPSIS

  use App::KSP_CKAN::WebHooks::InflateNetKAN 'inflate';

  inflate("Netkan.netkan");

=head1 DESCRIPTION

Webhook wrapper for NetKAN inflation on demand.

=cut

has 'config' => ( is => 'ro', lazy => 1, builder => 1 );

method _build_config {
  return App::KSP_CKAN::Tools::Config->new(
    working => $ENV{HOME}."/NetKAN-inflator",
  );
}

method inflate($identifier) {
  my $file = "NetKAN/".$identifier.".netkan";
  $self->_mirror_files;
  $self->_CKAN_meta->pull;
  $self->_NetKAN->pull;
  local $CWD = $self->config->working."/".$self->_NetKAN->working;

  if (! -e $file) {
    $self->warn("The identifier '".$identifier."' doesn't appear to exist");
    return 0;
  }

  # TODO: We're already passing in the config, is it really
  # necessary to pass in each of the other things as attributes?
  my $config = $self->config;
  my $netkan = App::KSP_CKAN::Tools::NetKAN->new(
    config      => $config,
    netkan      => $config->working."/netkan.exe",
    cache       => $config->working."/cache",
    token       => $config->GH_token,
    file        => $file,
    ckan_meta   => $self->_CKAN_meta,
    status      => $self->_status,
    rescan      => 1,
  );
  $netkan->inflate;
  $self->_push;

  # TODO: Status won't be set for inflate on demand because currently
  #       if the a NetKAN is not present in the status object it'll
  #       drop from the JSON output. So for individual inflation we'll
  #       end up with with 1 item in the status.
  return 1;
}

1;
